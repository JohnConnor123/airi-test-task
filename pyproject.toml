[tool.poetry]
name = "airi-test-task"
version = "0.1.0"
description = "This library contains the code used to run a test job to AIRI."
authors = ["JohnConnor123 <ivan.eudokimoff2014@gmail.com>"]
maintainers = ["JohnConnor123 <ivan.eudokimoff2014@gmail.com>"]
repository = "https://github.com/JohnConnor123/airi-test-task"
# documentation = ""
license = "Apache 2.0"
readme = "README.md"
packages = [
    { include = "src" }
]
exclude = [
    "data/*",
    "src/logs*",
    "src/notebooks/*",
    "src/mlflow-init-commands"
]

[tool.poetry.dependencies]
python = ">=3.12, <3.13"
# torch = {version = "^2.4.0+cu121", source = "torch-repo"}
# torchaudio = {version = "^2.4.0+cu121", source = "torch-repo"}
# torchvision = {version = "^0.19.0+cu121", source = "torch-repo"}
pandas = "^2.2.2"
scikit-learn = "^1.5.1"
numpy = "<2.0.0"
tqdm = "^4.66.5"
mlflow = "^2.16.0"
lightning = "^2.4.0"
tensorboard = "^2.17.1"
pynvml = "^11.5.3"
requests = "^2.32.3"
charset-normalizer = "^3.3.2"
chardet = "^5.2.0"
transformers = "^4.44.2"
optuna = "^4.0.0"
optuna-dashboard = "^0.16.1"
plotly = "5.3.1"
ydata-profiling = "^4.9.0"
sweetviz = "^2.3.1"
autoviz = "^0.1.905"
kaleido = "^0.2.1, !=0.2.1.post1"
dtale = "^3.13.1"
catboost = "^1.2.5"
yellowbrick = "^1.5"
pca = "^2.0.7"
umap-learn = "^0.5.6"
babyplots = "^1.7.0"
rich = "^13.8.0"
pytorch-lightning = "2.0.4"
torch-summary = "^1.4.5"
hydra-core = "^1.3.2"
jupyter-bokeh = "^4.0.5"
flask-socketio = "5.2.0"
ray = {extras = ["tune"], version = "^2.35.0"}

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.8.0"
mypy = "^1.11.2"
pandas-stubs = "^2.2.2.240807"
ipykernel = "^6.29.5"
jupyterlab = "^4.2.5"


[[tool.poetry.source]]
name = "torch-repo"
url = "https://download.pytorch.org/whl/cu121"
priority = "explicit"

[tool.black]
line-length = 95

[tool.isort]
profile = "black"
line_length = 90
lines_after_imports = 2

[tool.flake8]
max-line-length = 95
ignore = ['E501', 'E203', 'W503', 'E402']
max-complexity = 12
select = ['B', 'C', 'E', 'F', 'W', 'B9']
per-file-ignores = [
    '__init__.py: F401, E402',
]
count = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
